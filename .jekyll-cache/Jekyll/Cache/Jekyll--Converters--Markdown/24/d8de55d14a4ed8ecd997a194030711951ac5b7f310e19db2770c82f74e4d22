I"
<p>Displaying formatted currency amounts is a common requirement of web apps, but VueJS does not provide any filters out of the box. So here’s what you can do if you need to add a currency filter to your Vue project.</p>

<p>First, you’ll need to know about VueJS filters and how they work. Read more here: https://vuejs.org/v2/guide/filters.html</p>

<h2 id="using-the-currency-formatter-npm-package">Using the currency-formatter NPM Package</h2>

<p>If you are using webpack or a similar build tool and have access to node.js packages, then you can install the currency-formatter package from npm. By the way, I highly recommend using the <a href="https://cli.vuejs.org/">Vue CLI</a> for your projects.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install </span>currency-formatter <span class="nt">--save</span>
</code></pre></div></div>

<p>Then you can create a VueJS filter in your app code like so:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">vue</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">currencyFormatter</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">currency-formatter</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">Vue</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="dl">"</span><span class="s2">currency</span><span class="dl">"</span><span class="p">,</span> <span class="nx">formatNumberAsUSD</span><span class="p">);</span>

<span class="kd">function</span> <span class="nx">formatNumberAsUSD</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">value</span><span class="p">)</span> <span class="k">return</span> <span class="dl">""</span><span class="p">;</span>
  <span class="nx">value</span> <span class="o">=</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">value</span><span class="p">);</span>
  <span class="k">return</span> <span class="nx">currencyFormatter</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span> <span class="p">{</span> <span class="na">code</span><span class="p">:</span> <span class="dl">"</span><span class="s2">USD</span><span class="dl">"</span> <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">Vue.filter</code> registers a new global Vue filter called ‘currency’ and <code class="language-plaintext highlighter-rouge">formatNumberAsUSD</code> function does the work. The formatting function does three things, it (a) makes sure it has a truthy value and returns a blank string if not, (b) attempts to convert the value to a <code class="language-plaintext highlighter-rouge">Number</code>, and (c) uses <code class="language-plaintext highlighter-rouge">currencyFormatter.format</code> to format the number as USD.</p>

<h2 id="using-numberprototypetolocalestring">Using Number.prototype.toLocaleString()</h2>

<p>If you are not using a build tool with access to node.js packages, or you mistrust external dependencies, you might try using the Number.toLocalString() method below or <a href="https://github.com/smirzaei/currency-formatter/blob/master/index.js">take a peek at currency-formatter source code on Github</a> and borrow from it. Note that while this is supported in modern browsers, it may not be available in older browsers you might need to target.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">vue</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">currencyFormatter</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">currency-formatter</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">Vue</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="dl">"</span><span class="s2">currency</span><span class="dl">"</span><span class="p">,</span> <span class="nx">formatNumberAsUSD</span><span class="p">);</span>

<span class="kd">function</span> <span class="nx">formatNumberAsUSD</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">value</span><span class="p">)</span> <span class="k">return</span> <span class="dl">""</span><span class="p">;</span>
  <span class="k">return</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">value</span><span class="p">).</span><span class="nx">toLocaleString</span><span class="p">(</span><span class="dl">"</span><span class="s2">en</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span>
    <span class="na">style</span><span class="p">:</span> <span class="dl">"</span><span class="s2">currency</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">currency</span><span class="p">:</span> <span class="dl">"</span><span class="s2">USD</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Both <code class="language-plaintext highlighter-rouge">toLocaleString</code> and the currency-formatter package can handle currencies besides USD, too. <a href="https://www.npmjs.com/package/currency-formatter">Check out the currency-formatter npm page</a> for more details.</p>

<h2 id="summary">Summary</h2>

<p>No matter the approach you chose, you have now created a ‘currency’ filter that you can use in your VueJS templates like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;template&gt;
  &lt;span&gt;12&lt;/span&gt;
&lt;/template&gt;
</code></pre></div></div>

<p>And the output should look like this:</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$12.00
</code></pre></div></div>

<p>Excellent!</p>
:ET